
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class Solution:
    def reverseList(self, head: ListNode) -> ListNode:
        temp = head
        
        prev = None
        while temp:
            front = temp.next
            temp.next = prev
            prev = temp
            temp = front
        return prev

# Function to print the linked list
def printLinkedList(head: ListNode):
    temp = head
    while temp:
        print(temp.val, end=" ")
        temp = temp.next
    print()

if __name__ == "__main__":
    # Create a linked list with
    # Values 1, 3, 2, and 4
    head = ListNode(1)
    head.next = ListNode(3)
    head.next.next = ListNode(2)
    head.next.next.next = ListNode(4)

    # Print the original linked list
    print("Original Linked List: ", end="")
    printLinkedList(head)

    # Solution instance
    solution = Solution()
    # Reverse the linked list
    head = solution.reverseList(head)

    # Print the reversed linked list
    print("Reversed Linked List: ", end="")
    printLinkedList(head)
