
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def findStartingPoint(self, head):
        temp = head
        visited = {}
        while temp is not None:
            # Check if temp has been encountered again
            if temp in visited:
                # A loop is detected hence return temp
                return temp
            # Store temp as visited
            visited[temp] = True
            # Move to the next node
            temp = temp.next
        
        # If no loop is detected, return None
        return None

# Create a sample linked list with a loop
node1 = ListNode(1)
node2 = ListNode(2)
node1.next = node2
node3 = ListNode(3)
node2.next = node3
node4 = ListNode(4)
node3.next = node4
node5 = ListNode(5)
node4.next = node5
node5.next = node2

# Set the head of the linked list
head = node1

# Create an instance of the Solution class
solution = Solution()

# Detect the loop in the linked list
loopStartNode = solution.findStartingPoint(head)

if loopStartNode:
    print("Loop detected. Starting node of the loop is:", loopStartNode.val)
else:
    print("No loop detected in the linked list.")
